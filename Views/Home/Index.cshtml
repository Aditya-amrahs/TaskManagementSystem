@model IEnumerable<TaskManagementSystem.Models.Task>

@if (TempData["SuccessMessage"] != null)
{
    <div id="success-alert" class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>

    <script>
        setTimeout(function () {
            document.getElementById('success-alert').style.display = 'none';
        }, 15000);  @* 10sec = 10000 milliseconds *@ 
    </script>
}

@if (TempData["DeleteMessage"] != null)
{
    <div id="delete-alert" class="alert alert-success" role="alert">
        @TempData["DeleteMessage"]
    </div>

    <script>
        setTimeout(function () {
            document.getElementById('delete-alert').style.display = 'none';
        }, 15000); @* 10sec = 10000 milliseconds *@
    </script>
}

<div class="container mb-4">
    <div class="row align-items-center">
        <div class="col">
            <h2>Task List</h2>
        </div>
        <div class="col text-end">
            <a href="@Url.Action("Create")" class="btn btn-primary">Create New Task</a>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        @foreach (var task in Model)
        {
            <div class="col-12 mb-4">
                <div class="card shadow-sm" style="min-height: 250px;">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@task.Title</h5>
                        <p class="card-text">@task.Description</p>
                        <p class="card-text mt-auto"><small class="text-muted">Priority: @task.Priority</small></p>
                        <p class="card-text"><small class="text-muted">Due Date: @task.DueDate.ToShortDateString()</small></p>
                        <p class="card-text">
                            <input type="checkbox" disabled @(task.IsCompleted ? "checked" : "") /> Completed
                        </p>
                        <div class="mt-auto">
                            <a asp-action="Edit" asp-route-id="@task.TaskId" class="btn btn-outline-primary btn-sm">Edit</a>
                            <a href="javascript:void(0)" class="btn btn-outline-danger btn-sm"
                               onclick="confirmDelete('@Url.Action("Delete", new { id = task.TaskId })')">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function confirmDelete(deleteUrl) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This will Permanently Delete this Task!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = deleteUrl;
            }
        });
    }
</script>
